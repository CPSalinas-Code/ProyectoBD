/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Negocios.Administrador;
import java.lang.reflect.Field;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christian
 */
public class Config_Edificio extends javax.swing.JFrame {

    public Administrador admin;
    public DefaultTableModel modelo;

    /**
     * Creates new form Config_Edificio
     */
    public Config_Edificio() {
        initComponents();
        admin = new Administrador();
        modelo = new DefaultTableModel();
        txtPrueba.setEditable(false);
        this.setTitle("Configuracion de Registros de la Tabla Edificio");
        this.setSize(665, 305);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEdificios = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        btnActualizar = new javax.swing.JButton();
        txtPrueba = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(10, 244, 83, 23);

        tablaEdificios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Edificio", "Nombre Edificio", "Direccion Edificio", "Numero de Pisos"
            }
        ));
        tablaEdificios.setCellSelectionEnabled(true);
        tablaEdificios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEdificiosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEdificios);
        tablaEdificios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 11, 644, 193);

        btnActualizar.setText("Actualizar Tabla");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar);
        btnActualizar.setBounds(10, 210, 280, 23);
        getContentPane().add(txtPrueba);
        txtPrueba.setBounds(480, 210, 170, 23);

        btnEliminar.setText("Eliminar Registros");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(308, 244, 170, 23);

        btnEditar.setText("Buscar ID y editar Registro");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar);
        btnEditar.setBounds(484, 244, 170, 23);

        jLabel2.setText("ID seleccionado a buscar:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(310, 210, 210, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondoFor2.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 670, 280);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed

    public void actualizar() {
        Object objeto = new Object();
        String datos[] = new String[6];
        int cont = 0;
        modelo = new DefaultTableModel();
        modelo.addColumn("ID Edificio");
        modelo.addColumn("Nombre Edificio");
        modelo.addColumn("Direccion Edificio");
        modelo.addColumn("Numero de Pisos");

        datos[0] = "s";
        int numeroDeRegistros;
        numeroDeRegistros = admin.numeroReg("Edificios");
        if (numeroDeRegistros == 0) {
            JOptionPane.showMessageDialog(null, "Error al contar los registros de la tabla Edificios o no tiene PERMISOS en esta tabla con el usuario actual");
            this.setVisible(false);
        } else {
            this.setVisible(true);
            try {
                while (numeroDeRegistros > 0) {
                    
                    objeto =  admin.obtenerDatosEdificio(cont);
                    int contadorPosicion = 0;
                    for (Field f : objeto.getClass().getDeclaredFields()) {
                        
                        datos [contadorPosicion] =  (String) f.get(objeto);
                        contadorPosicion++;
                    }
                    
                    modelo.addRow(datos);
                    cont++;
                    numeroDeRegistros--;
                }
                tablaEdificios.setModel(modelo);

            } catch (Exception e) {
                System.out.println("ERROR AL OBTENER LOS DATOS de Edificios");
                JOptionPane.showMessageDialog(null, "ERROR AL OBTENER LOS DATOS de Edificios");
            }
        }
        //datos = admin.obtenerDatosPersona();

    }
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String clav = txtPrueba.getText();
        //System.out.println(clav.isEmpty());
        if (clav.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de ID no Seleccionado");
        } else {
            if (admin.eliminarReg(clav, "Edificios")){
                JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
                actualizar();
            }else{
                JOptionPane.showMessageDialog(null, "Error al eliminar registro, ID no valido");
            }
            
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        String clav = txtPrueba.getText();
        //System.out.println(clav.isEmpty());
        if (clav.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de ID no Seleccionado");
        } else {
            EditarEdificio ventana = new EditarEdificio(clav, "Edificios", this);
            //actualizar();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tablaEdificiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEdificiosMouseClicked
        // TODO add your handling code here:
        int row = tablaEdificios.getSelectedRow();
        int col = tablaEdificios.getSelectedColumn();
        String id = tablaEdificios.getValueAt(row, col).toString();
        txtPrueba.setText(id);
    }//GEN-LAST:event_tablaEdificiosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Config_Edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Config_Edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Config_Edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Config_Edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Config_Edificio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEdificios;
    private javax.swing.JTextField txtPrueba;
    // End of variables declaration//GEN-END:variables
}
