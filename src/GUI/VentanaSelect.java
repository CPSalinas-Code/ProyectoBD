/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Negocios.Administrador;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christian
 */
public class VentanaSelect extends javax.swing.JFrame {

    public ArrayList camposSelec = new ArrayList<>();
    public Administrador admin;
    public DefaultTableModel modelo;
    public DefaultTableModel modeloCampos;
    public DefaultTableModel modeloCamposSelec;
    public DefaultTableModel modeloCondicion;
    public DefaultTableModel modeloTablaResult;
    public String nombreTabla = null;
    public String SelectTotal = "select";
    public String CondicionTotal = "where";
    public String ordenamiento = "order by";
    public String camposTot = "";

    /**
     * Creates new form VentanaSelect
     */
    public VentanaSelect() {
        modeloTablaResult = new DefaultTableModel();
        initComponents();
        admin = new Administrador();
        
        this.setSize(950, 760);
        this.setResizable(false);
        actualizar();
        modelo = new DefaultTableModel();
        modeloCampos = new DefaultTableModel();
        modeloCamposSelec = new DefaultTableModel();
        modeloCondicion = new DefaultTableModel();

        opcComience.setEnabled(false);
        opcContenga.setEnabled(false);
        opcTermine.setEnabled(false);
        opcADN.setEnabled(false);
        opcOR.setEnabled(false);
        txtCondicion.setEditable(false);
        txtCondicionT.setEditable(false);
        txtSelectTotal.setEditable(false);
        btnCancelarOrd.setEnabled(false);
        btnAgregarOrd.setEnabled(false);
        opcASC.setEnabled(false);
        opcDESC.setEnabled(false);
        tablaOrdernarPor.setEnabled(false);
        this.setLocationRelativeTo(null);
    }

    public void actualizar() {
        String datos[] = new String[1];
        int cont = 0;
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de Tablas");

        datos[0] = "s";
        int numeroTablas;
        numeroTablas = admin.numeroTablas("all_users");
        if (numeroTablas == 0) {
            JOptionPane.showMessageDialog(null, "Error al contar las tablas de usuario");
        } else {
            try {
                while (numeroTablas > 0) {
                    datos = admin.obtenerNombreTablas(cont);
                    modelo.addRow(datos);
                    cont++;
                    numeroTablas--;
                }
                tablaNombreTablas.setModel(modelo);
            } catch (Exception e) {
                System.out.println("Rrror al cargar tablas de usuario");
                JOptionPane.showMessageDialog(null, "Error al cargar las tablas de usuario");

            }
        }

        //datos = admin.obtenerDatosPersona();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoLike = new javax.swing.ButtonGroup();
        grupoANDOR = new javax.swing.ButtonGroup();
        grupoOrdenar = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        opcContenga = new javax.swing.JRadioButton();
        opcComience = new javax.swing.JRadioButton();
        opcTermine = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaCamposCondicion = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        }
        ;
        ComboCondiciones = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnAgregarCondicion = new javax.swing.JButton();
        txtCondicionT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCondicion = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        opcADN = new javax.swing.JRadioButton();
        opcOR = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaNombreTablas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCampos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        }
        ;
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCamposSelec = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        }
        ;
        btnLimpiarCampos = new javax.swing.JButton();
        btnSelecTabla = new javax.swing.JButton();
        btnSelecCampo = new javax.swing.JButton();
        btnGenConsulta = new javax.swing.JButton();
        txtSelectTotal = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaOrdernarPor = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        }
        ;
        opcDESC = new javax.swing.JRadioButton();
        opcASC = new javax.swing.JRadioButton();
        btnHabilitarOrd = new javax.swing.JButton();
        btnCancelarOrd = new javax.swing.JButton();
        btnAgregarOrd = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnEjecutarConsulta = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaFINAL = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(230, 241, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Condiciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 14))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(230, 241, 253));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones Like"));

        grupoLike.add(opcContenga);
        opcContenga.setText("Like Contenga");

        grupoLike.add(opcComience);
        opcComience.setText("Like Comience");

        grupoLike.add(opcTermine);
        opcTermine.setText("Like Termine");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(opcContenga)
                    .addComponent(opcComience)
                    .addComponent(opcTermine, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(opcContenga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opcComience)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opcTermine)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        tablaCamposCondicion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Campos Disponibles"
            }
        ));
        jScrollPane4.setViewportView(tablaCamposCondicion);

        ComboCondiciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Opcion", "=", "!=", ">", "<", ">=", "<=", "like" }));
        ComboCondiciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCondicionesActionPerformed(evt);
            }
        });

        jLabel1.setText("Elija una opcion para la condicion");

        btnAgregarCondicion.setText("Agregar Condicion");
        btnAgregarCondicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCondicionActionPerformed(evt);
            }
        });

        jLabel2.setText("Escriba condicion");

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnReset.setText("Eliminar Condiciones y Consulta");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(230, 241, 253));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Mas de una condicion"));

        grupoANDOR.add(opcADN);
        opcADN.setText("AND");

        grupoANDOR.add(opcOR);
        opcOR.setText("OR");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opcOR)
                    .addComponent(opcADN))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opcADN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opcOR)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Condiciones Agregadas:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ComboCondiciones, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAgregarCondicion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCondicion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtCondicionT, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ComboCondiciones, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAgregarCondicion)
                                    .addComponent(btnReset)))
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCondicionT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 28, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 230, 910, 200);

        jPanel2.setBackground(new java.awt.Color(230, 241, 253));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccionar Tabla y Campos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 14))); // NOI18N

        tablaNombreTablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nombre de Tablas"
            }
        ));
        jScrollPane1.setViewportView(tablaNombreTablas);

        tablaCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Campos"
            }
        ));
        jScrollPane2.setViewportView(tablaCampos);

        tablaCamposSelec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Campos Seleccionado"
            }
        ));
        jScrollPane3.setViewportView(tablaCamposSelec);

        btnLimpiarCampos.setText("Limpiar Campos Seleccionados");
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        btnSelecTabla.setText("Seleccionar Tabla");
        btnSelecTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecTablaActionPerformed(evt);
            }
        });

        btnSelecCampo.setText("Seleccionar Campo");
        btnSelecCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecCampoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSelecTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSelecCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(20, 10, 620, 220);

        btnGenConsulta.setText("Generar Consulta Total");
        btnGenConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenConsulta);
        btnGenConsulta.setBounds(310, 430, 180, 20);
        getContentPane().add(txtSelectTotal);
        txtSelectTotal.setBounds(30, 450, 880, 30);

        jPanel5.setBackground(new java.awt.Color(230, 241, 253));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ordenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 14))); // NOI18N

        tablaOrdernarPor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Ordenar Por"
            }
        ));
        jScrollPane5.setViewportView(tablaOrdernarPor);

        grupoOrdenar.add(opcDESC);
        opcDESC.setText("Descendente");

        grupoOrdenar.add(opcASC);
        opcASC.setText("Ascendente");

        btnHabilitarOrd.setText("Habilitar");
        btnHabilitarOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilitarOrdActionPerformed(evt);
            }
        });

        btnCancelarOrd.setText("Cancelar Ordenamiento");
        btnCancelarOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarOrdActionPerformed(evt);
            }
        });

        btnAgregarOrd.setText("Agregar");
        btnAgregarOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarOrdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(opcDESC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opcASC)
                .addGap(36, 36, 36))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAgregarOrd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnCancelarOrd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btnHabilitarOrd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opcDESC)
                    .addComponent(opcASC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHabilitarOrd)
                    .addComponent(btnAgregarOrd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarOrd)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(650, 10, 280, 220);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(30, 490, 900, 10);

        btnEjecutarConsulta.setBackground(new java.awt.Color(153, 0, 0));
        btnEjecutarConsulta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEjecutarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        btnEjecutarConsulta.setText("Realizar Consulta");
        btnEjecutarConsulta.setBorder(null);
        btnEjecutarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(btnEjecutarConsulta);
        btnEjecutarConsulta.setBounds(500, 430, 180, 20);

        tablaFINAL.setModel(modeloTablaResult);
        jScrollPane6.setViewportView(tablaFINAL);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(30, 500, 900, 180);

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(410, 690, 160, 23);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondoFor3.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 950, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecTablaActionPerformed
        // TODO add your handling code here:
        int row = tablaNombreTablas.getSelectedRow();
        nombreTabla = null;
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una Tabla");
        } else {
            nombreTabla = tablaNombreTablas.getValueAt(row, 0).toString();
            actualizarTablaCampos(nombreTabla);
            actualizarTablaCondiciones(nombreTabla);
            actualizarTablaOrdenarPor(nombreTabla);
            txtCondicion.setEditable(true);
        }
    }//GEN-LAST:event_btnSelecTablaActionPerformed

    private void btnSelecCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecCampoActionPerformed
        // TODO add your handling code here:
        String campoSelec = null;
        int row = tablaCampos.getSelectedRow();
        campoSelec = null;
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un Campo");
        } else {
            modeloCamposSelec = new DefaultTableModel();
            modeloCamposSelec.addColumn("Campos Selecionados");
            campoSelec = tablaCampos.getValueAt(row, 0).toString();
            camposSelec.add(campoSelec);
            System.out.println(campoSelec);
            System.out.println("2");
            int numSelec = camposSelec.size();
            System.out.println("size" + numSelec);
            int contadorPosicion = 0;
            while (contadorPosicion < numSelec) {
                String[] campo = new String[1];
                campo[0] = camposSelec.get(contadorPosicion).toString();
                modeloCamposSelec.addRow(campo);
                contadorPosicion++;
            }
            tablaCamposSelec.setModel(modeloCamposSelec);
        }
    }//GEN-LAST:event_btnSelecCampoActionPerformed

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        // TODO add your handling code here:
        camposSelec.clear();
        txtCondicionT.setText("");
        txtSelectTotal.setText("");
        CondicionTotal = "where";
        SelectTotal = "select";
        modeloCamposSelec = new DefaultTableModel();
        modeloCamposSelec.addColumn("Campos Selecionados");
        tablaCamposSelec.setModel(modeloCamposSelec);
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void btnAgregarCondicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCondicionActionPerformed
        // TODO add your handling code here:
        int row = tablaCamposCondicion.getSelectedRow();
        String condicionCampo = null;
        String condicionEscrita = null;
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un Campo para la Condicion");
        } else {
            condicionCampo = tablaCamposCondicion.getValueAt(row, 0).toString();
            String operador = (String) ComboCondiciones.getSelectedItem();
            condicionEscrita = txtCondicion.getText();
            if (condicionEscrita.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ecriba la condicion que necesita");
            } else if (operador.equals("Seleccione Opcion")) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un operador para la condicion");
            } else if (operador.equals("like")) {
                if (opcComience.isSelected() == false && opcContenga.isSelected() == false && opcTermine.isSelected() == false) {
                    JOptionPane.showMessageDialog(null, "Debe selecionar una Opcion para el operador -like-");
                } else {
                    if (opcComience.isSelected()) {
                        condicionEscrita = condicionEscrita + "%";
                    } else if (opcContenga.isSelected()) {
                        condicionEscrita = "%" + condicionEscrita + "%";
                    } else if (opcTermine.isSelected()) {
                        condicionEscrita = "%" + condicionEscrita;
                    }
                    if (CondicionTotal.equals("where")) {
                        condicionEscrita = "'" + condicionEscrita + "'";
                        String union = " " + condicionCampo + " " + operador + " " + condicionEscrita;
                        CondicionTotal = CondicionTotal + union;
                        System.out.println(CondicionTotal);
                        txtCondicionT.setText(CondicionTotal);
                        opcADN.setEnabled(false);
                        opcOR.setEnabled(false);
                    } else {
                        opcADN.setEnabled(true);
                        opcOR.setEnabled(true);
                        if (opcADN.isSelected() == false && opcOR.isSelected() == false) {
                            JOptionPane.showMessageDialog(null, "Debe selecionar una pcion AND u OR para mas condiciones-");
                        } else if (opcADN.isSelected()) {
                            condicionEscrita = "'" + condicionEscrita + "'";
                            String union2 = " " + condicionCampo + " " + operador + " " + condicionEscrita;
                            CondicionTotal = CondicionTotal + " AND " + union2;
                            System.out.println(CondicionTotal);
                            txtCondicionT.setText(CondicionTotal);
                        } else if (opcOR.isSelected()) {
                            condicionEscrita = "'" + condicionEscrita + "'";
                            String union2 = condicionCampo + " " + operador + " " + condicionEscrita;
                            CondicionTotal = CondicionTotal + " OR " + union2;
                            System.out.println(CondicionTotal);
                            txtCondicionT.setText(CondicionTotal);
                        }

                    }

                }
                //CondicionLike like = new CondicionLike(condicionEscrita);
                //like.setVisible(true);
                //condicionEscrita = "'"+like.opcionFinal+"'";
            } else if (CondicionTotal.equals("where")) {
                condicionEscrita = "'" + condicionEscrita + "'";
                String union = " " + condicionCampo + " " + operador + " " + condicionEscrita;
                CondicionTotal = CondicionTotal + union;
                System.out.println(CondicionTotal);
                txtCondicionT.setText(CondicionTotal);
                opcADN.setEnabled(false);
                opcOR.setEnabled(false);
            } else {
                opcADN.setEnabled(true);
                opcOR.setEnabled(true);
                if (opcADN.isSelected() == false && opcOR.isSelected() == false) {
                    JOptionPane.showMessageDialog(null, "Debe selecionar una pcion AND u OR para mas condiciones-");
                } else if (opcADN.isSelected()) {
                    condicionEscrita = "'" + condicionEscrita + "'";
                    String union = " " + condicionCampo + " " + operador + " " + condicionEscrita;
                    CondicionTotal = CondicionTotal + " AND " + union;
                    System.out.println(CondicionTotal);
                    txtCondicionT.setText(CondicionTotal);
                } else if (opcOR.isSelected()) {
                    condicionEscrita = "'" + condicionEscrita + "'";
                    String union = " " + condicionCampo + " " + operador + " " + condicionEscrita;
                    CondicionTotal = CondicionTotal + " OR " + union;
                    System.out.println(CondicionTotal);
                    txtCondicionT.setText(CondicionTotal);
                }

            }
            //CondicionTotal += " "+condicionCampo+" "+operador+" "+condicionEscrita;
            //System.out.println(CondicionTotal+" "+condicionCampo+" "+operador+" "+condicionEscrita);
            //txtCondicionT.setText(CondicionTotal);
        }

    }//GEN-LAST:event_btnAgregarCondicionActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        ordenamiento = "order by";
        btnCancelarOrd.setEnabled(false);
        btnHabilitarOrd.setEnabled(true);
        btnAgregarOrd.setEnabled(false);
        tablaOrdernarPor.clearSelection();
        opcASC.setEnabled(false);
        opcDESC.setEnabled(false);
        tablaOrdernarPor.setEnabled(false);
        grupoOrdenar.clearSelection();
        txtCondicionT.setText("");
        txtSelectTotal.setText("");
        CondicionTotal = "where";
        SelectTotal = "select";
        grupoANDOR.clearSelection();
        grupoLike.clearSelection();
        opcADN.setEnabled(false);
        opcComience.setEnabled(false);
        opcContenga.setEnabled(false);
        opcOR.setEnabled(false);
        opcTermine.setEnabled(false);
        ComboCondiciones.setSelectedIndex(0);

    }//GEN-LAST:event_btnResetActionPerformed

    private void ComboCondicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCondicionesActionPerformed
        // TODO add your handling code here:
        if (ComboCondiciones.getSelectedItem().toString().equals("like")) {
            opcComience.setEnabled(true);
            opcContenga.setEnabled(true);
            opcTermine.setEnabled(true);
        } else {
            opcComience.setEnabled(false);
            opcContenga.setEnabled(false);
            opcTermine.setEnabled(false);
        }
    }//GEN-LAST:event_ComboCondicionesActionPerformed

    private void btnGenConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenConsultaActionPerformed
        // TODO add your handling code here:
        //txtSelectTotal.setText("");
        SelectTotal = "select";
        int row = tablaNombreTablas.getSelectedRow();
        //String nombreCampoOrdenar = null;
        //String parteOrdenar = "order by";
        nombreTabla = null;
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una Tabla");
        } else {
            nombreTabla = tablaNombreTablas.getValueAt(row, 0).toString();
            String campos = "";
            int size = camposSelec.size();
            int contador = 0;
            while (contador < size) {
                campos += (camposSelec.get(contador)).toString() + ", ";
                contador++;
            }
            camposTot="";
            camposTot = campos.substring(0, campos.length() - 2);
            //System.out.println(camposTot);
            //"select""campos""from""nombreTabla""where""condicion""order by""ordenamiento"
            System.out.println("select "+camposTot); //select ->>SelectTotal
            System.out.println("from "+nombreTabla);
            if (CondicionTotal.equals("where")) {
                SelectTotal = SelectTotal + " " + camposTot + " from " + nombreTabla;
                if (ordenamiento.equals("order by")) {
                    System.out.println("Sin ordenamiento = " + SelectTotal);
                    txtSelectTotal.setText(SelectTotal);
                    //"select"camposTot"from"nombreTabla
                } else {
                    SelectTotal = SelectTotal + " " + ordenamiento;
                    System.out.println("Con ordenamiento = " + SelectTotal);
                    txtSelectTotal.setText(SelectTotal);
                    //"select"camposTot"from"nombreTabla"order by"ordenamiento
                }

            } else {
                SelectTotal = "select";
                SelectTotal = SelectTotal + " " + camposTot + " from " + nombreTabla + " " + CondicionTotal;
                if (ordenamiento.equals("order by")) {
                    System.out.println("Sin Ordenamiento = " + SelectTotal);
                    txtSelectTotal.setText(SelectTotal);
                } else {
                    SelectTotal = SelectTotal + " " + ordenamiento;
                    System.out.println("Con ordenamiento = " + SelectTotal);
                    txtSelectTotal.setText(SelectTotal);
                }

            }

        }

    }//GEN-LAST:event_btnGenConsultaActionPerformed

    private void btnHabilitarOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilitarOrdActionPerformed
        // TODO add your handling code here:
        btnCancelarOrd.setEnabled(true);
        btnAgregarOrd.setEnabled(true);
        btnHabilitarOrd.setEnabled(false);
        opcASC.setEnabled(true);
        opcDESC.setEnabled(true);
        tablaOrdernarPor.setEnabled(true);
    }//GEN-LAST:event_btnHabilitarOrdActionPerformed

    private void btnCancelarOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarOrdActionPerformed
        // TODO add your handling code here:
        ordenamiento = "order by";
        tablaOrdernarPor.clearSelection();
        btnCancelarOrd.setEnabled(false);
        btnHabilitarOrd.setEnabled(true);
        btnAgregarOrd.setEnabled(false);
        opcASC.setEnabled(false);
        opcDESC.setEnabled(false);
        tablaOrdernarPor.setEnabled(false);
        grupoOrdenar.clearSelection();
    }//GEN-LAST:event_btnCancelarOrdActionPerformed

    private void btnAgregarOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarOrdActionPerformed
        // TODO add your handling code here:
        String nombreCampoOrdenar;
        int row2 = tablaOrdernarPor.getSelectedRow();
        if (row2 == -1) {
            //nombreCampoOrdenar = null;
            //parteOrdenar ="order by";
            txtSelectTotal.setText(SelectTotal);
        } else {
            nombreCampoOrdenar = tablaOrdernarPor.getValueAt(row2, 0).toString();
            ordenamiento = ordenamiento + " " + nombreCampoOrdenar;
            if (opcASC.isSelected()) {
                ordenamiento = ordenamiento + " ASC";
                JOptionPane.showMessageDialog(null, "Ordenamiento Ascendente agregado, genere nuevamente la consulta");
                JOptionPane.showMessageDialog(null, "Para cambiar el ordenamiento agrgado debe Cancelar el Ordenamiento previo y habilitar uno nuevo");
                btnAgregarOrd.setEnabled(false);
            } else if (opcDESC.isSelected()) {
                ordenamiento = ordenamiento + " DESC";
                JOptionPane.showMessageDialog(null, "Ordenamiento Descendente agregado, genere nuevamente la consulta");
                JOptionPane.showMessageDialog(null, "Para cambiar el ordenamiento agrgado debe Cancelar el Ordenamiento previo y habilitar uno nuevo");
                btnAgregarOrd.setEnabled(false);
            } else if (opcASC.isSelected() == false && opcDESC.isSelected() == false) {
                ordenamiento = ordenamiento;
                JOptionPane.showMessageDialog(null, "Ordenamiento agregado, genere nuevamente la consulta");
                JOptionPane.showMessageDialog(null, "Para cambiar el ordenamiento agrgado debe Cancelar el Ordenamiento previo y habilitar uno nuevo");
                btnAgregarOrd.setEnabled(false);

            }
        }
    }//GEN-LAST:event_btnAgregarOrdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEjecutarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarConsultaActionPerformed
        // TODO add your handling code here:
        String consultaSelect = txtSelectTotal.getText();
        
        if (consultaSelect.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Es necesario generar primero la consulta");
        } else {
            int contadorPosicion = 0;
            int cont = 0;
            int size = camposSelec.size();
            String datos[] = new String[size];
            modeloTablaResult = new DefaultTableModel();
            while (contadorPosicion < size) {
                System.out.println(camposSelec.get(contadorPosicion).toString());
                modeloTablaResult.addColumn(camposSelec.get(contadorPosicion).toString());
                contadorPosicion++;
            }

            datos[0] = "s";
            int numeroRegistroResult;
            numeroRegistroResult = admin.numeroRegistroResult(consultaSelect);
            if (numeroRegistroResult == 0) {
                JOptionPane.showMessageDialog(null, "Error al contar los registros obtenidos en la consulta, consulta mal hechoa o no existen registros seleccionador");
            } else {
                try {
                    String sentenciaWhere = CondicionTotal.substring(5, CondicionTotal.length());
                    String sentenciaOrder = ordenamiento.substring(8,ordenamiento.length());
                    while (numeroRegistroResult > 0) {
                        datos = admin.obtenerDatosResult(cont,camposTot,nombreTabla,sentenciaWhere,sentenciaOrder,camposSelec.size());
                        System.out.println(datos);
                        modeloTablaResult.addRow(datos);
                        cont++;
                        numeroRegistroResult--;
                    }
                    tablaFINAL.setModel(modeloTablaResult);

                } catch (Exception e) {
                    System.out.println("Error al Realizar la consulta, consulta mal hechoa o no existen registros seleccionador");
                    JOptionPane.showMessageDialog(null, "Error al Realizar la consulta, consulta mal hechoa o no existen registros seleccionador");

                }
            }
            //datos = admin.obtenerDatosPersona();

            //if (admin.consultaSelect(txtSelectTotal.getText())){
//                JOptionPane.showMessageDialog(null, "Consulta Realizada Correctamente");
            //txtConsulta.setText(null);
//            }else{
//                JOptionPane.showMessageDialog(null, "Error en la consulta");
//            }
        }
    }//GEN-LAST:event_btnEjecutarConsultaActionPerformed

    public void actualizarTablaCampos(String nombreTab) {
        String datos[] = new String[1];
        int cont = 0;
        modeloCampos = new DefaultTableModel();
        modeloCampos.addColumn("Campos");

        datos[0] = "s";
        int numeroCampos;
        numeroCampos = admin.numeroCampos(nombreTab);
        if (numeroCampos == 0) {
            JOptionPane.showMessageDialog(null, "Error al contar los campos de la tabla seleccionada");
        } else {
            try {
                while (numeroCampos > 0) {
                    datos = admin.obtenerCampos(cont, nombreTab);
                    modeloCampos.addRow(datos);
                    cont++;
                    numeroCampos--;
                }
                tablaCampos.setModel(modeloCampos);
            } catch (Exception e) {
                System.out.println("Error el obtener los campos de la tabla seleccionada");
                JOptionPane.showConfirmDialog(null, "Error el obtener los campos de la tabla seleccionada");

            }
        }

        //datos = admin.obtenerDatosPersona();
    }

    public void actualizarTablaCondiciones(String nombreTab) {
        tablaCamposCondicion.setModel(modeloCampos);
    }

    public void actualizarTablaOrdenarPor(String nombreTab) {
        tablaOrdernarPor.setModel(modeloCampos);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaSelect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboCondiciones;
    private javax.swing.JButton btnAgregarCondicion;
    private javax.swing.JButton btnAgregarOrd;
    private javax.swing.JButton btnCancelarOrd;
    private javax.swing.JButton btnEjecutarConsulta;
    private javax.swing.JButton btnGenConsulta;
    private javax.swing.JButton btnHabilitarOrd;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSelecCampo;
    private javax.swing.JButton btnSelecTabla;
    private javax.swing.ButtonGroup grupoANDOR;
    private javax.swing.ButtonGroup grupoLike;
    private javax.swing.ButtonGroup grupoOrdenar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton opcADN;
    private javax.swing.JRadioButton opcASC;
    private javax.swing.JRadioButton opcComience;
    private javax.swing.JRadioButton opcContenga;
    private javax.swing.JRadioButton opcDESC;
    private javax.swing.JRadioButton opcOR;
    private javax.swing.JRadioButton opcTermine;
    private javax.swing.JTable tablaCampos;
    private javax.swing.JTable tablaCamposCondicion;
    private javax.swing.JTable tablaCamposSelec;
    private javax.swing.JTable tablaFINAL;
    private javax.swing.JTable tablaNombreTablas;
    private javax.swing.JTable tablaOrdernarPor;
    private javax.swing.JTextField txtCondicion;
    private javax.swing.JTextField txtCondicionT;
    private javax.swing.JTextField txtSelectTotal;
    // End of variables declaration//GEN-END:variables
}
